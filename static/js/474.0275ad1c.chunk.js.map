{"version":3,"file":"static/js/474.0275ad1c.chunk.js","mappings":"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","sources":["Pages/Admin/AdminNav.js","Utils/SockectConnect.js","Utils/SocketMessages.js","Utils/FetchData.js","Pages/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { PersonGear } from \"react-bootstrap-icons\";\r\n\r\nconst AdminNav = ({ setDrawer }) => {\r\n  const navigate = useNavigate();\r\n  const inst = useSelector((state) => state.inst.activeInst);\r\n  return (\r\n    <>\r\n      <Dropdown style={{ width: \"100%\" }}>\r\n        <Dropdown.Toggle variant=\"transparent\" className=\"nav-link\">\r\n          <PersonGear /> Admin{\" \"}\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu variant=\"dark\">\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`staffs`);\r\n              }}\r\n            >\r\n              Staffs\r\n            </p>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`modes`);\r\n              }}\r\n            >\r\n              Payment Modes\r\n            </p>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`owners`);\r\n              }}\r\n            >\r\n              Property Owners\r\n            </p>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`buildings`);\r\n              }}\r\n            >\r\n              Buildings/Hostels\r\n            </p>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`bills`);\r\n              }}\r\n            >\r\n              Bills\r\n            </p>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`expensecats`);\r\n              }}\r\n            >\r\n              Expense Categories\r\n            </p>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`expenses`);\r\n              }}\r\n            >\r\n              Expenses\r\n            </p>\r\n          </Dropdown.Item>{\" \"}\r\n          <Dropdown.Item>\r\n            <p\r\n              className=\"nav-link\"\r\n              onClick={() => {\r\n                setDrawer(false);\r\n                navigate(`edit`);\r\n              }}\r\n            >\r\n              Edit Institution\r\n            </p>\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <hr />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminNav;\r\n","import io from \"socket.io-client\";\r\nimport { ApiUrl } from \"../Network/Urls\";\r\n\r\nexport const socket = io.connect(ApiUrl);\r\n\r\nexport const SocketJoinRoom = (data) => {\r\n  socket.emit(\"joinRoom\", data);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { socket } from \"./SockectConnect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FetchStaffs } from \"../Network/CredApi\";\r\nimport { FetchModes } from \"../Network/ModeApi\";\r\nimport { FetchExpenseCats } from \"../Network/ExpenseCatApi\";\r\nimport { FetchExpenses } from \"../Network/ExpenseApi\";\r\nimport { FetchBills } from \"../Network/BillApi\";\r\nimport { FetchBuildings } from \"../Network/BuildingApi\";\r\nimport { FetchHouses } from \"../Network/HouseApi\";\r\nimport { FetchInvoices } from \"../Network/InvoiceApi\";\r\nimport { FetchOwners } from \"../Network/OwnerApi\";\r\nimport { FetchPayments } from \"../Network/PaymentApi\";\r\nimport { FetchSubs } from \"../Network/SubApi\";\r\n\r\nconst SocketMessages = () => {\r\n  //redux dispatch\r\n  const dispatch = useDispatch();\r\n\r\n  const User = useSelector((state) => state.auth.user);\r\n  const ActiveCred = useSelector((state) => state.cred.activeCred);\r\n  const online = useSelector((state) => state.online.online);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      if (message.messageType === \"staff\") {\r\n        FetchStaffs(\r\n          ActiveCred.instLinker,\r\n          User.token,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"mode\") {\r\n        FetchModes(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n\r\n      if (message.messageType === \"expenseCat\") {\r\n        FetchExpenseCats(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"expense\") {\r\n        FetchExpenses(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"bill\") {\r\n        FetchBills(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"building\") {\r\n        FetchBuildings(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"house\") {\r\n        FetchHouses(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"invoice\") {\r\n        FetchInvoices(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"owner\") {\r\n        FetchOwners(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"payment\") {\r\n        FetchPayments(\r\n          User.token,\r\n          ActiveCred.instLinker,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"tenant\") {\r\n        FetchStaffs(\r\n          ActiveCred.instLinker,\r\n          User.token,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n      if (message.messageType === \"sub\") {\r\n        FetchSubs(\r\n          ActiveCred.instLinker,\r\n          User.token,\r\n          dispatch,\r\n          online,\r\n          \"socket\",\r\n          message.dataValues\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default SocketMessages;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FetchBills } from \"../Network/BillApi\";\r\nimport { FetchBuildings } from \"../Network/BuildingApi\";\r\nimport { FetchStaffs } from \"../Network/CredApi\";\r\nimport { FetchExpenses } from \"../Network/ExpenseApi\";\r\nimport { FetchExpenseCats } from \"../Network/ExpenseCatApi\";\r\nimport { FetchHouses } from \"../Network/HouseApi\";\r\nimport { FetchInvoices } from \"../Network/InvoiceApi\";\r\nimport { FetchModes } from \"../Network/ModeApi\";\r\nimport { FetchOwners } from \"../Network/OwnerApi\";\r\nimport { FetchPayments } from \"../Network/PaymentApi\";\r\nimport { FetchSubs } from \"../Network/SubApi\";\r\nimport { CheckLiveUser, LiveLogIn, RegisterUser } from \"../Network/AuthApi\";\r\nimport { login } from \"../reducers/AuthSlice\";\r\nimport { RegisterLiveInst } from \"../Network/InstApi\";\r\nimport { SocketJoinRoom, socket } from \"./SockectConnect\";\r\n\r\nconst FetchData = () => {\r\n  //redux dispatch\r\n  const dispatch = useDispatch();\r\n\r\n  const TheUser = useSelector((state) => state.auth.user);\r\n  const ActiveCred = useSelector((state) => state.cred.activeCred);\r\n  const online = useSelector((state) => state.online.online);\r\n  const ActiveInst = useSelector((state) => state.inst.activeInst);\r\n  const creds = useSelector((state) => state.cred.creds);\r\n  const [Loading, setLoading] = useState(false);\r\n\r\n  const [Connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    UpdateData();\r\n  }, [Connected, TheUser]);\r\n\r\n  const ConnectRooms = () => {\r\n    SocketJoinRoom({ clientId: ActiveInst.clientId });\r\n    creds.map((cred) => {\r\n      if (cred.email == TheUser.logger || cred.contact == TheUser.logger) {\r\n        SocketJoinRoom({\r\n          token: TheUser.token,\r\n          instLinker: cred.instLinker,\r\n          room: cred.instLinker,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const UpdateData = async () => {\r\n    if (!Loading) {\r\n      setLoading(true);\r\n      //live user\r\n      let User = !TheUser.token ? await RegisterLiveUser() : TheUser;\r\n\r\n      if (!ActiveInst.id || ActiveInst.id == 0) {\r\n        await RegisterLiveInst(ActiveInst, User, dispatch);\r\n      }\r\n\r\n      if (\r\n        parseInt(ActiveCred.admin) === 1 ||\r\n        parseInt(ActiveCred.staff) === 1\r\n      ) {\r\n        FetchData(User);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    socket.on(\"connect\", () => {\r\n      setConnected(true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      setConnected(false);\r\n    });\r\n\r\n    ConnectRooms();\r\n  };\r\n\r\n  const RegisterLiveUser = async () => {\r\n    let liveUser = await CheckLiveUser(TheUser.logger);\r\n    let UserLive;\r\n    if (liveUser === \"register\" || liveUser === 0) {\r\n      UserLive = await RegisterUser(\r\n        TheUser.logger,\r\n        TheUser.password,\r\n        TheUser.linker,\r\n        TheUser.linker\r\n      );\r\n    } else {\r\n      UserLive = await LiveLogIn(TheUser.logger, TheUser.password);\r\n    }\r\n\r\n    if (UserLive.token && UserLive.user) {\r\n      dispatch(\r\n        login({\r\n          name: TheUser.name,\r\n          email: TheUser.logger,\r\n          password: TheUser.password,\r\n          linker: TheUser.linker,\r\n          live: 1,\r\n          token: UserLive.token,\r\n          logger: TheUser.logger,\r\n          id: UserLive.user.id,\r\n        })\r\n      );\r\n\r\n      return {\r\n        name: TheUser.name,\r\n        email: TheUser.logger,\r\n        password: TheUser.password,\r\n        linker: TheUser.linker,\r\n        live: 1,\r\n        token: UserLive.token,\r\n        logger: TheUser.logger,\r\n        id: UserLive.user.id,\r\n      };\r\n    }\r\n    return TheUser;\r\n  };\r\n\r\n  const FetchData = (User) => {\r\n    FetchStaffs(ActiveCred.instLinker, User.token, dispatch, online);\r\n    FetchExpenses(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchExpenseCats(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchModes(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchBills(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchBuildings(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchHouses(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchInvoices(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchOwners(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchPayments(User.token, ActiveCred.instLinker, dispatch, online);\r\n    FetchSubs(User.token, ActiveCred.instLinker, dispatch, online);\r\n  };\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default FetchData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport AdminNav from \"../Admin/AdminNav\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Bank,\r\n  BarChartLine,\r\n  Cash,\r\n  HouseDoor,\r\n  People,\r\n  PersonCircle,\r\n  ReceiptCutoff,\r\n  Globe,\r\n  Mailbox,\r\n} from \"react-bootstrap-icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { VerifySub } from \"../../Utils/VerifySub\";\r\nimport SocketMessages from \"../../Utils/SocketMessages\";\r\nimport FetchData from \"../../Utils/FetchData\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const inst = useSelector((state) => state.inst.activeInst);\r\n  const User = useSelector((state) => state.auth.user);\r\n  const subs = useSelector((state) => state.sub.subs);\r\n  const ActiveCred = useSelector((state) => state.cred.activeCred);\r\n  const Sub = VerifySub(subs, ActiveCred.instLinker);\r\n  const [Drawer, setDrawer] = useState(false);\r\n\r\n  const ToggleDrawer = () => setDrawer(!Drawer);\r\n\r\n  useEffect(() => {\r\n    if (!ActiveCred.linker) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header ToggleDrawer={ToggleDrawer}></Header>\r\n      <div style={{ marginTop: \"40px\" }}>\r\n        <SocketMessages></SocketMessages>\r\n        <FetchData></FetchData>\r\n\r\n        <div className=\"d-flex\">\r\n          <div\r\n            className={`bg-secondary ${\r\n              Drawer ? \"side-menu-open\" : \"side-menu\"\r\n            }`}\r\n          >\r\n            <div>\r\n              <p\r\n                onClick={() => {\r\n                  setDrawer(false);\r\n                  navigate(`/${inst.name}`);\r\n                }}\r\n              >\r\n                <strong className=\"nav-link text-truncate\">\r\n                  <Bank /> {inst.name}\r\n                </strong>\r\n              </p>\r\n              <hr />\r\n              <p\r\n                onClick={() => {\r\n                  setDrawer(false);\r\n                  navigate(`profile`);\r\n                }}\r\n              >\r\n                <strong className=\"nav-link text-truncate\">\r\n                  <PersonCircle /> {User.name || User.logger}\r\n                </strong>\r\n              </p>\r\n              <hr />\r\n              {parseInt(ActiveCred.admin) === 1 && Sub > 0 ? (\r\n                <AdminNav setDrawer={setDrawer}></AdminNav>\r\n              ) : null}\r\n              {(parseInt(ActiveCred.admin) === 1 ||\r\n                parseInt(ActiveCred.staff) === 1) &&\r\n              Sub > 0 ? (\r\n                <>\r\n                  <p\r\n                    onClick={() => {\r\n                      setDrawer(false);\r\n                      navigate(`houses`);\r\n                    }}\r\n                  >\r\n                    <strong className=\"nav-link text-truncate\">\r\n                      <HouseDoor /> Houses/Rooms\r\n                    </strong>\r\n                  </p>\r\n                  <hr />\r\n                  <p\r\n                    onClick={() => {\r\n                      setDrawer(false);\r\n                      navigate(`tenants`);\r\n                    }}\r\n                  >\r\n                    <strong className=\"nav-link text-truncate\">\r\n                      <People /> Tenants\r\n                    </strong>\r\n                  </p>\r\n                  <hr />\r\n                  <p\r\n                    onClick={() => {\r\n                      setDrawer(false);\r\n                      navigate(`invoices`);\r\n                    }}\r\n                  >\r\n                    <strong className=\"nav-link text-truncate\">\r\n                      <ReceiptCutoff /> Invoices\r\n                    </strong>\r\n                  </p>\r\n                  <hr />\r\n                  <p\r\n                    onClick={() => {\r\n                      setDrawer(false);\r\n                      navigate(`payments`);\r\n                    }}\r\n                  >\r\n                    <strong className=\"nav-link text-truncate\">\r\n                      <Cash /> Payments\r\n                    </strong>\r\n                  </p>\r\n                  <hr />\r\n                  <p\r\n                    onClick={() => {\r\n                      setDrawer(false);\r\n                      navigate(`monthly-report`);\r\n                    }}\r\n                  >\r\n                    <strong className=\"nav-link text-truncate\">\r\n                      <BarChartLine /> Monthly Report\r\n                    </strong>\r\n                  </p>\r\n                  <hr />\r\n                </>\r\n              ) : null}\r\n            </div>\r\n            <p>\r\n              {Sub - 30 * 24 * 60 * 60 < 0 &&\r\n              parseInt(ActiveCred.admin) === 1 ? (\r\n                <span\r\n                  onClick={() => {\r\n                    navigate(\r\n                      `/${inst.name}/activate/${inst.name}/${inst.clientId}`\r\n                    );\r\n                    setDrawer(false);\r\n                  }}\r\n                  className=\"text-center\"\r\n                  style={{\r\n                    color: \"hotpink\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <small>Activate </small>\r\n                </span>\r\n              ) : null}{\" \"}\r\n              <br />\r\n              <span\r\n                onClick={() => {\r\n                  navigate(`/${inst.name}/terms`);\r\n                  setDrawer(false);\r\n                }}\r\n                className=\"text-center text-info\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                <small>Terms And Conditions </small>\r\n              </span>{\" \"}\r\n              <br />\r\n              <span\r\n                onClick={() => {\r\n                  navigate(`/${inst.name}/privacy`);\r\n                  setDrawer(false);\r\n                }}\r\n                className=\"text-center text-info\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                <small>Privacy Policy </small>\r\n              </span>{\" \"}\r\n              <br />\r\n              <span\r\n                className=\"text-center text-light\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                <small>\r\n                  <Globe /> www.techsystems.world\r\n                </small>\r\n              </span>\r\n              <br />\r\n              <span\r\n                className=\"text-center text-light\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                <small>\r\n                  <Mailbox /> contact.techsystems@gmail.com\r\n                </small>\r\n              </span>\r\n              <br />\r\n              <span\r\n                className=\"text-center text-light\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                <small>&copy; {new Date().getFullYear()} Techsystems</small>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div\r\n            className={`${\r\n              Drawer ? \"main-page-drawer-open\" : \"main-page-drawer-closed\"\r\n            }`}\r\n          >\r\n            {\" \"}\r\n            {Sub < 0 ? (\r\n              <>\r\n                {subs.length > 0 ? (\r\n                  <p className=\"text-danger text-center h6\">\r\n                    Annual Period Lapsed{\" \"}\r\n                    {parseInt(ActiveCred.admin) === 1 ? (\r\n                      <span\r\n                        className=\"text-primary btn-link\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() =>\r\n                          navigate(\r\n                            `/${inst.name}/activate/${inst.name}/${inst.clientId}`\r\n                          )\r\n                        }\r\n                      >\r\n                        <em>Click To Activate</em>\r\n                      </span>\r\n                    ) : (\r\n                      \"Contact Your Institution Admin to Activate\"\r\n                    )}\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"text-danger text-center h6\">\r\n                    Trial Period Lapsed{\" \"}\r\n                    {parseInt(ActiveCred.admin) === 1 ? (\r\n                      <span\r\n                        className=\"text-primary btn-link\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() =>\r\n                          navigate(\r\n                            `/${inst.name}/activate/${inst.name}/${inst.clientId}`\r\n                          )\r\n                        }\r\n                      >\r\n                        <em>Click To Activate</em>\r\n                      </span>\r\n                    ) : (\r\n                      \"Contact Your Institution Admin to Activate\"\r\n                    )}\r\n                  </p>\r\n                )}\r\n              </>\r\n            ) : Sub < 5 * 24 * 60 * 60 ? (\r\n              <>\r\n                {subs.length > 0 ? (\r\n                  <p className=\"text-danger text-center h6\">\r\n                    Annual Period Lapsing in {parseInt(Sub / (24 * 60 * 60))}{\" \"}\r\n                    Days\r\n                    {parseInt(ActiveCred.admin) === 1 ? (\r\n                      <span\r\n                        className=\"text-primary btn-link\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() =>\r\n                          navigate(\r\n                            `/${inst.name}/activate/${inst.name}/${inst.clientId}`\r\n                          )\r\n                        }\r\n                      >\r\n                        <em>Click To Activate</em>\r\n                      </span>\r\n                    ) : (\r\n                      \"Contact Your Institution Admin to Activate\"\r\n                    )}\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"text-danger text-center h6\">\r\n                    Trial Period Lapsing In {parseInt(Sub / (24 * 60 * 60))}{\" \"}\r\n                    Days\r\n                    {parseInt(ActiveCred.admin) === 1 ? (\r\n                      <span\r\n                        className=\"text-primary btn-link\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() =>\r\n                          navigate(\r\n                            `/${inst.name}/activate/${inst.name}/${inst.clientId}`\r\n                          )\r\n                        }\r\n                      >\r\n                        <em>Click To Activate</em>\r\n                      </span>\r\n                    ) : (\r\n                      \"Contact Your Institution Admin to Activate\"\r\n                    )}\r\n                  </p>\r\n                )}\r\n              </>\r\n            ) : null}\r\n            <div className=\"bg-light\">\r\n              <Outlet></Outlet>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","setDrawer","navigate","useNavigate","useSelector","state","inst","activeInst","_jsxs","_Fragment","children","Dropdown","style","width","variant","className","_jsx","PersonGear","onClick","socket","io","ApiUrl","SocketJoinRoom","data","emit","dispatch","useDispatch","User","auth","user","ActiveCred","cred","activeCred","online","useEffect","on","message","messageType","FetchStaffs","instLinker","token","dataValues","FetchModes","FetchExpenseCats","FetchExpenses","FetchBills","FetchBuildings","FetchHouses","FetchInvoices","FetchOwners","FetchPayments","FetchSubs","TheUser","ActiveInst","creds","_useState","useState","_useState2","_slicedToArray","Loading","setLoading","_useState3","_useState4","Connected","setConnected","UpdateData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","RegisterLiveUser","t0","sent","id","RegisterLiveInst","parseInt","admin","staff","FetchData","clientId","map","email","logger","contact","room","stop","apply","arguments","_ref2","_callee2","liveUser","UserLive","_context2","CheckLiveUser","RegisterUser","password","linker","LiveLogIn","login","name","live","abrupt","subs","sub","Sub","VerifySub","Drawer","Header","ToggleDrawer","marginTop","SocketMessages","concat","Bank","PersonCircle","AdminNav","HouseDoor","People","ReceiptCutoff","Cash","BarChartLine","color","cursor","fontSize","Globe","Mailbox","Date","getFullYear","length","Outlet"],"sourceRoot":""}